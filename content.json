{"meta":{"title":"SanW","subtitle":"SanWCoder webBlog","description":null,"author":"SanWCoder","url":"http://sanwcoder.github.io"},"pages":[{"title":"","date":"2018-04-03T03:41:36.000Z","updated":"2018-01-25T14:41:06.000Z","comments":true,"path":"404.html","permalink":"http://sanwcoder.github.io/404.html","excerpt":"","text":"404 *{margin:0;padding:0;outline:none;font-family:\\5FAE\\8F6F\\96C5\\9ED1,宋体;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-khtml-user-select:none;user-select:none;cursor:default;font-weight:lighter;} .center{margin:0 auto;} .whole{width:100%;height:100%;line-height:100%;position:fixed;bottom:0;left:0;z-index:-1000;overflow:hidden;} .whole img{width:100%;height:100%;} .mask{width:100%;height:100%;position:absolute;top:0;left:0;background:#000;opacity:0.6;filter:alpha(opacity=60);} .b{width:100%;text-align:center;height:400px;position:absolute;top:50%;margin-top:-230px}.a{width:150px;height:50px;margin-top:30px}.a a{display:block;float:left;width:150px;height:50px;background:#fff;text-align:center;line-height:50px;font-size:18px;border-radius:25px;color:#333}.a a:hover{color:#000;box-shadow:#fff 0 0 20px} p{color:#fff;margin-top:40px;font-size:24px;} #num{margin:0 5px;font-weight:bold;} var num=4; function redirect(){ num--; document.getElementById(\"num\").innerHTML=num; if(num"},{"title":"Archives","date":"2016-08-16T07:00:24.000Z","updated":"2018-01-25T14:41:06.000Z","comments":true,"path":"archives/index.html","permalink":"http://sanwcoder.github.io/archives/index.html","excerpt":"","text":""},{"title":"","date":"2015-08-16T06:58:08.000Z","updated":"2018-01-25T14:41:06.000Z","comments":true,"path":"about/index.html","permalink":"http://sanwcoder.github.io/about/index.html","excerpt":"HipaperA fashional newspaper, blog theme for Hexo. ☞ Preview Demo | 查看中文使用文档","text":"HipaperA fashional newspaper, blog theme for Hexo. ☞ Preview Demo | 查看中文使用文档 Installation Get it from GitHub 1$ git clone https://github.com/iTimeTraveler/hexo-theme-hipaper.git themes/hipaper Enable Modify theme setting in _config.yml to hipaper. 1234# Extensions## Plugins: http://hexo.io/plugins/## Themes: http://hexo.io/themes/theme: hipaper Update 12$ cd themes/hipaper$ git pull FeaturesLogo: Image or TextYou can set a image as your logo instead of original text title. Like this: just enable avatar field in hipaper/_config.yml. 12345678# Put your avatar.jpg into `hexo-site/themes/hipaper/source/` directory.# url is target link (E.g. `url: https://hexo.io/logo.svg` or `url: css/images/mylogo.jpg`)avatar: enable: true width: 124 height: 124 bottom: 10 url: https://hexo.io/logo.svg Code HighlightHipaper use Tomorrow Theme for your code block. We have six options in total: default, normal, night, night blue, night bright, night eighties Above preview picture is default theme. the image below show other five Highlight themes. Modify highlight_theme in hipaper/_config.yml. 12345# Code Highlight theme# Available value:# default | normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: default SidebarYou can put your sidebar in left side, right side or bottom of your site by editing sidebar setting.Hipaper provides 7 built-in widgets: search social recent_posts category tag tagcloud archive All of them are enabled by default. You can edit them in widget setting. SearchHipaper use Insight Search to help you search anything inside your site without any third-party plugin. 12345# Searchsearch: insight: true # you need to install `hexo-generator-json-content` before using Insight Search swiftype: # enter swiftype install key here baidu: false # you need to disable other search engines to use Baidu search, options: true, false Attention: You need to install hexo-generator-json-content before using Insight Search. 1$ npm install -S hexo-generator-json-content FancyboxHipaper uses Fancybox to showcase your photos. You can use Markdown syntax or fancybox tag plugin to add your photos. 123![img caption](img url)&#123;% fancybox img_url [img_thumbnail] [img_caption] %&#125; Comment supportHipaper has native support for DuoShuo &amp; Disqus comment systems. Modify the following snippets to Hipaper hipaper/_config.yml: 123# comment ShortName, you can choose only ONE to display.duoshuo_shortname: iTimeTravelerdisqus_shortname: Browser support ContributingAll kinds of contributions (enhancements, new features, documentation &amp; code improvements, issues &amp; bugs reporting) are welcome. Looking forward to your pull request. Special thanks to ATHEMES, who designed the original theme FASHIONISTA for Wordpress. LicenseHipaper is under the MIT license. See the LICENSE file for details."},{"title":"Tags","date":"2016-08-11T04:12:45.000Z","updated":"2018-01-25T14:41:06.000Z","comments":true,"path":"tags/index.html","permalink":"http://sanwcoder.github.io/tags/index.html","excerpt":"","text":""},{"title":"Categories","date":"2016-08-16T07:00:44.000Z","updated":"2018-01-25T14:41:06.000Z","comments":false,"path":"categories/index.html","permalink":"http://sanwcoder.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"load跟initalize区别","slug":"load跟initalize区别","date":"2018-04-09T03:43:42.000Z","updated":"2018-04-09T07:23:55.000Z","comments":true,"path":"2018/04/09/load跟initalize区别/","link":"","permalink":"http://sanwcoder.github.io/2018/04/09/load跟initalize区别/","excerpt":"initialize 和 load 是 NSObject 的两个特殊类方法，在面试过程中很有可能会问到同时在工作中我们也可以利用其相应的特性做一些操作。","text":"initialize 和 load 是 NSObject 的两个特殊类方法，在面试过程中很有可能会问到同时在工作中我们也可以利用其相应的特性做一些操作。 一. load1&gt; 基本区别 load是在程序运行时出发（加入编译文件Compile Sources），且仅调用一次，无需手动调用。 load 方法不遵从继承规则，如果类本身没有实现load方法，那么系统就不会调用，谁实现就会调用谁的load方法。 尽可能的精简load方法，因为整个应用程序在执行load方法时会阻塞，即，程序会阻塞直到所有类的load方法执行完毕，才会继续 load 方法中最常用的就是方法交换method swizzling 2&gt; 实例分析开发文档说明： 创建类及其load方法 1234567891011121314151617// People.m+ (void)load&#123;NSLog(@\"class == People,method == load\");&#125;// Student.m 继承自People+ (void)load&#123;NSLog(@\"class == Student,method == load\");&#125;// Teacher.m 继承自People+ (void)load&#123;NSLog(@\"class == Teacher,method == load\");&#125;// People+Ext.m People的分类+ (void)load&#123;NSLog(@\"class == People (Ext),method == load\");&#125; // method swizzling 实现方法交换+ (void)load&#123; Method personMethod = class_getInstanceMethod([Person class], NSSelectorFromString(@\"personSay\")); Method studentMethod = class_getInstanceMethod([Student class], NSSelectorFromString(@\"studentSay\")); method_exchangeImplementations(personMethod, studentMethod); &#125; 运行结果 二. initalize1&gt; 基本区别 当某个类第一次收到消息的时候触发,且只调用一次，无需手动调用。 父类实现initalize，子类没有实现，调用子类会同时触发父类两次 父类实现initalize，子类也实现，调用子类会先触发父类再触发子类 父类实现initalize，父类分类也实现，分类方法会覆盖父类方法，调用的是分类方法 2&gt; 实例分析开发文档说明： 创建类及其initialize方法 123456// People.m+ (void)initialize&#123;NSLog(@\"class == %@,method == initialize\",NSStringFromClass([self class]));&#125;// Student.m 继承自People+ (void)initialize&#123;NSLog(@\"class == %@,method == initialize\",NSStringFromClass([self class]));&#125;// People+Ext.m People的分类+ (void)initialize&#123;NSLog(@\"class categary == %@,method == initialize\",NSStringFromClass([self class]));&#125; 运行结果","categories":[{"name":"iOS","slug":"iOS","permalink":"http://sanwcoder.github.io/categories/iOS/"}],"tags":[{"name":"Object-C","slug":"Object-C","permalink":"http://sanwcoder.github.io/tags/Object-C/"}]},{"title":"如何使用hexo搭建个人博客并部署到github","slug":"如何使用hexo搭建个人博客并部署到github","date":"2018-04-04T03:47:54.000Z","updated":"2018-04-09T09:50:42.000Z","comments":true,"path":"2018/04/04/如何使用hexo搭建个人博客并部署到github/","link":"","permalink":"http://sanwcoder.github.io/2018/04/04/如何使用hexo搭建个人博客并部署到github/","excerpt":"使用Hexo搭建个人博客","text":"使用Hexo搭建个人博客 安装&amp;搭建安装Node.js 到node.js官网下载相应版本按照提示安装 使用Homebrow安装 123456789// 1. 安装HomeBrow~ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"// 2. 安装node~ brew install node// 3. 安装完成后测试是否安装成功// 3.1 查看node版本~ node -version// 3.2 查看npm版本~ npm -version 安装Hexo1~ npm install -g hexo-cli 安装git1~ brew install git 配置GitHub在你的Github下创建新仓库并将仓库名命名为 GitHub名.github.io这样命名后GitHub会自动 启用 GitHub Pages并将你的博客地址设置为 https://GitHub名.github.io/ 初步搭建&amp;本地测试 使用Hexo创建博客 123~ hexo init &lt;folder&gt;~ cd &lt;folder&gt;~ npm install 创建完成后在相应的文件=夹中会有如下显示 12345678.├── _config.yml // 必要的配置文件，如博客名├── package.json // 应用程序的信息├── scaffolds // 模版文件夹,post.md,drafts.md├── source // 资源文件夹| ├── _drafts| └── _posts└── themes // 主题文件夹 本地测试 1234567// 清除缓存文件~ hexo clean // 生成静态文件~ hexo generate/g// 启动服务器~ hexo server// 服务器启动以后再浏览器中打开 http://localhost:4000/即可查看博客 自定义（以Icarus主题为例） 下载相应的主题主题 1~ git clone https://github.com/ppoffice/hexo-theme-icarus.git 配置_config.yml 1234567891011121314151617title: SanW // 标题subtitle: // 福标题description: // 描述keywords: ios // 搜索关键字author: // 作者language: zh-CN // Hexo支持国际化，设置相应语言在/themes/icarus/languages 下url: http://sanwcoder.github.io // 设置成你的博客地址// 文件root，如果直接在当前文件夹下设置为/，切记要设置正确，设置错误会加载不出来样式root: / permalink: :year/:month/:day/:title/permalink_defaults:// 设置你下载的主题，将你下载的主题放到themes文件夹下，并在这儿设置为相应的主题theme: icarus// 部署到githubdeploy: type: git // 类型为git repo: // 仓库的完整地址，在部署时会部署到git库的master分支上 更改相应主题的_config.yml 1234567891011121314151617181920212223242526272829# Menus// 菜单栏menu: Home: . Archives: archives Categories: categories Tags: tags About: about# Customizecustomize: // 网站图标 logo: enabled: true width: 40 height: 40 url: images/icon.jpg profile: enabled: true avatar: css/images/icon.jpg author: // 网站作者 author_title: // 作者简介 location: // 位置 FengTai, China follow: // 作者github地址 social_links: // 其他社交链接 github: Weibo: email: social_link_tooltip: true 部署到github 123456// 清除缓存文件~ hexo clean // 生成文件~ hexo g// 部署~ hexo d 访问https://GitHub名.github.io 未完待续…","categories":[{"name":"blog","slug":"blog","permalink":"http://sanwcoder.github.io/categories/blog/"}],"tags":[{"name":"github","slug":"github","permalink":"http://sanwcoder.github.io/tags/github/"},{"name":"blog","slug":"blog","permalink":"http://sanwcoder.github.io/tags/blog/"}]}]}